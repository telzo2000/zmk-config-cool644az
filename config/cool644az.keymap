#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        comb2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        comb3 {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        comb4 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        comb5 {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E    &kp R      &kp T                                                        &kp Y           &kp U  &kp I      &kp O       &kp P
&kp A       &kp S       &kp D    &kp F      &kp G           &mo 1                 &kp MINUS              &kp H           &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X       &kp C    &kp V      &kp B           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N           &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp ESCAPE  &kp TAB  &kp RCTRL  &lt 1 LEFT_GUI  &lt 1 SPACE           &lt 2 SPACE            &lt 2 LEFT_ALT  &kp N1 &kp N2                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp N1           &kp N2       &kp N3        &kp N4      &kp N5                          &kp N6         &kp N7        &kp N8                &kp N9                 &kp N0
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT  &mo 0   &kp N2     &kp AMPERSAND  &kp SQT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER
&kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH   &kp EQUAL    &kp N3  &kp N4     &kp TILDE      &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION
&kp SLASH        &kp RSHIFT   &kp LCTRL     &kp LGUI    &kp LALT     &kp N3  &kp MINUS  &kp N6                       &kp N1 &kp N2                 &lt 2 SPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&kp F1       &kp F2     &kp F3             &kp F4         &kp F5                       &kp Y          &kp U           &kp I           &kp O            &kp P
&kp AT_SIGN  &kp SQT    &kp DOUBLE_QUOTES  &kp SEMICOLON  &kp COLON    &kp N1  &kp N2  &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT        &kp ENTER
&kp Z        &kp X      &kp C              &kp V          &kp B        &kp N3  &kp N4  &kp LC(SPACE)  &kp RG(SPACE)   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH
&kp RSHIFT   &kp LCTRL  &kp LGUI           &kp LALT       &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                      &kp N1 &kp N2                    &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE        &kp N1 &kp N2                   &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE    &kp N1 &kp N2                  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE         &kp N1 &kp N2                  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE        &kp N1 &kp N2                  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
    behaviors {
        ms_up: mouse_up {
            compatible = "zmk,behavior-mouse";
            #binding-cells = <0>;
            movement = <1>;
        };
        ms_down: mouse_down {
            compatible = "zmk,behavior-mouse";
            #binding-cells = <0>;
            movement = <-1>;
        };
        ms_left: mouse_left {
            compatible = "zmk,behavior-mouse";
            #binding-cells = <0>;
            movement = <-1>;
        };
    };
};